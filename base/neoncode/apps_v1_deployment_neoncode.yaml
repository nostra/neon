apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/vcs-uri: ssh://fluxpres@localhost:30022/home/fluxpres/git/neoncode.git
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: quarkus
    app.kubernetes.io/name: neoncode
  name: neoncode
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: neoncode
  template:
    metadata:
      annotations:
        app.quarkus.io/vcs-uri: ssh://fluxpres@localhost:30022/home/fluxpres/git/neoncode.git
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/managed-by: quarkus
        app.kubernetes.io/name: neoncode
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        #image: registry.management.svc.cluster.local:5000/scienta/neon:1.0.0-SNAPSHOT
        #image: kind-registry:5000/scienta/neon:1.0.0-SNAPSHOT
        #image: kind-registry:5001/scienta/neon:1.0.0-SNAPSHOT
        #For Kind, it turns out that this is the image reference that works
        image: localhost:5001/scienta/neon:1.0.0-SNAPSHOT
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /q/health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: neoncode
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /q/health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 3
          httpGet:
            path: /q/health/started
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10